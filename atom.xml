<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liufeng</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-23T07:00:14.436Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liufeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>B端优化数据加载优化</title>
    <link href="http://yoursite.com/2017/03/23/optimize/"/>
    <id>http://yoursite.com/2017/03/23/optimize/</id>
    <published>2017-03-23T05:11:44.000Z</published>
    <updated>2017-03-23T07:00:14.436Z</updated>
    
    <content type="html">&lt;h2 id=&quot;浏览器访问过程&quot;&gt;&lt;a href=&quot;#浏览器访问过程&quot; class=&quot;headerlink&quot; title=&quot;浏览器访问过程&quot;&gt;&lt;/a&gt;浏览器访问过程&lt;/h2&gt;&lt;p&gt;   &lt;a href=&quot;http://liufengvling@github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;请看我另一篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;优化原则&quot;&gt;&lt;a href=&quot;#优化原则&quot; class=&quot;headerlink&quot; title=&quot;优化原则&quot;&gt;&lt;/a&gt;优化原则&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;减少http请求数量&lt;/li&gt;
&lt;li&gt;减少数据传输量大小&lt;/li&gt;
&lt;li&gt;减少数据的响应时间&lt;/li&gt;
&lt;li&gt;先css，后内容，最后js动作&lt;/li&gt;
&lt;li&gt;延迟加载&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;A-减少http请求数量的方法&quot;&gt;&lt;a href=&quot;#A-减少http请求数量的方法&quot; class=&quot;headerlink&quot; title=&quot;A. 减少http请求数量的方法&quot;&gt;&lt;/a&gt;A. 减少http请求数量的方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用浏览器缓存,web中的css，js，图片等静态资源更新的频率都比较低，而这些文件几乎是每次访问页面都需要的，如果能把这些内容缓存到浏览器中，减少http请求量，能很好的提升性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;设置http头中的cache-control和expires的属性，可使文件缓存，如果想替换缓存可通过变更url请求地址（修改文件名或者加时间参数等）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;合并js，css，图片等资源,把图片base64编码放入页面减少http请求（弊端：正文加载变慢，一般不这样），例如：把多个js文件合并成。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;java项目中使用的合并压缩 &lt;strong&gt;JAWR&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;B-减少数据传输量大小&quot;&gt;&lt;a href=&quot;#B-减少数据传输量大小&quot; class=&quot;headerlink&quot; title=&quot;B. 减少数据传输量大小&quot;&gt;&lt;/a&gt;B. 减少数据传输量大小&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用gzip压缩传输&lt;br&gt;在服务器端对文件进行压缩，在浏览器端进行解压，文本文件压缩率在80%以上，所以开启对html，css，js进行gzip压缩传输，可有效减少数据量，但是这样会增加服务器和浏览器的压缩和解压运算量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对js和css进行压缩&lt;br&gt;这个压缩是指对js，css等，通过去除空行，空格，换行符，注释，变量名混淆等方式减少文件大小。如果在此基础上进行gzip压缩传输，数据量可以更。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;减少cookie来回传播&lt;br&gt;由于cookie会随着http请求来回的穿，所以cookie的内容不宜过多，如果有数据需要存在浏览器端，可以考虑浏览器 &lt;strong&gt;session storage&lt;/strong&gt;。同时对于静态资源，cookie没什么用，可以放在不同的域名下，这样cookie就不会跟着了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;C-减少数据的响应时间&quot;&gt;&lt;a href=&quot;#C-减少数据的响应时间&quot; class=&quot;headerlink&quot; title=&quot;C. 减少数据的响应时间&quot;&gt;&lt;/a&gt;C. 减少数据的响应时间&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;CDN&lt;br&gt;通过CDN，把数据放在距离用户较近的服务器上，可以缩短网络链路，加快网络访问。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;D-先css，后内容，最后js动作&quot;&gt;&lt;a href=&quot;#D-先css，后内容，最后js动作&quot; class=&quot;headerlink&quot; title=&quot;D. 先css，后内容，最后js动作&quot;&gt;&lt;/a&gt;D. 先css，后内容，最后js动作&lt;/h3&gt;&lt;p&gt;浏览器首先请求html正文，然后从上到下依次解析html文档，在前面的文件将会被先加载，加载完后再向下解析html文件。将css文件放到html头部，这样可以避免先渲染body后，再加载css渲染，导致一开始内容错乱，页面闪烁。js事件不影响视觉，最后加载。&lt;/p&gt;
&lt;h3 id=&quot;E-延迟加载&quot;&gt;&lt;a href=&quot;#E-延迟加载&quot; class=&quot;headerlink&quot; title=&quot;E. 延迟加载&quot;&gt;&lt;/a&gt;E. 延迟加载&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;当html准备好后，通过js方法加载资源。例如在所有资源加载完在加载图片&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**document.ready 是dom树加载完，并不一定所有资源都加载完&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*  window.onload  是在所有资源都加载完的动作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//加载广告&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.write(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;scri&#39;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&#39;pt src=&quot;http://www.jb51.net/ad.js&quot;&amp;gt;&amp;lt;/s&#39;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&#39;cript&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;自加载需要的资源&lt;br&gt;例如js，有两种方式，第一种把所有js压缩合并到几个文件，然后缓存到浏览器；第二种，只把全局性的js缓存到浏览器，然后各自页面按需加载少量js，一般这两种方式都可以。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浏览器访问过程&quot;&gt;&lt;a href=&quot;#浏览器访问过程&quot; class=&quot;headerlink&quot; title=&quot;浏览器访问过程&quot;&gt;&lt;/a&gt;浏览器访问过程&lt;/h2&gt;&lt;p&gt;   &lt;a href=&quot;http://liufengvling@github.io&quot; target=
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="performance" scheme="http://yoursite.com/tags/performance/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2017/03/23/hello-world/"/>
    <id>http://yoursite.com/2017/03/23/hello-world/</id>
    <published>2017-03-23T01:39:48.356Z</published>
    <updated>2016-05-23T09:22:55.531Z</updated>
    
    <content type="html">&lt;p&gt;从今天起，开始写博客了，从开始敲这第一篇博客就感觉不一样了，之前看到大神说过，写博客更多的意义在于提升自己的地位，而我的目标在于找到自己与大神们的差距，身临其境，写出东西来，才能对比出距离，选择大于努力，这也许是一种努力的捷径。&lt;/p&gt;
&lt;p&gt;希望这第一篇博客成为一个印记，能勉励我前进，加油！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从今天起，开始写博客了，从开始敲这第一篇博客就感觉不一样了，之前看到大神说过，写博客更多的意义在于提升自己的地位，而我的目标在于找到自己与大神们的差距，身临其境，写出东西来，才能对比出距离，选择大于努力，这也许是一种努力的捷径。&lt;/p&gt;
&lt;p&gt;希望这第一篇博客成为一个印记，
    
    </summary>
    
    
  </entry>
  
</feed>
